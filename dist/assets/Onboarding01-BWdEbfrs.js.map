{"version":3,"file":"Onboarding01-BWdEbfrs.js","sources":["../../src/components/visualizations/WorldTour.vue","../../src/apps/mosaic/src/pages/Onboarding01.vue"],"sourcesContent":["<template>\n  <div class=\"world-tour-container\" ref=\"container\">\n    <div v-if=\"loading\" class=\"loading-indicator\">\n      <div class=\"spinner\"></div>\n      <div class=\"loading-text\">Loading Earth Data...</div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, onMounted, onBeforeUnmount, watch } from 'vue';\nimport * as d3 from 'd3';\nimport { feature, mesh } from 'topojson-client';\n\n// Versor class for handling rotations (from Observable example)\nclass Versor {\n  static fromAngles([l, p, g]) {\n    l *= Math.PI / 360;\n    p *= Math.PI / 360;\n    g *= Math.PI / 360;\n    const sl = Math.sin(l), cl = Math.cos(l);\n    const sp = Math.sin(p), cp = Math.cos(p);\n    const sg = Math.sin(g), cg = Math.cos(g);\n    return [\n      cl * cp * cg + sl * sp * sg,\n      sl * cp * cg - cl * sp * sg,\n      cl * sp * cg + sl * cp * sg,\n      cl * cp * sg - sl * sp * cg\n    ];\n  }\n  \n  static toAngles([a, b, c, d]) {\n    return [\n      Math.atan2(2 * (a * b + c * d), 1 - 2 * (b * b + c * c)) * 180 / Math.PI,\n      Math.asin(Math.max(-1, Math.min(1, 2 * (a * c - d * b)))) * 180 / Math.PI,\n      Math.atan2(2 * (a * d + b * c), 1 - 2 * (c * c + d * d)) * 180 / Math.PI\n    ];\n  }\n  \n  static interpolateAngles(a, b) {\n    const i = Versor.interpolate(Versor.fromAngles(a), Versor.fromAngles(b));\n    return t => Versor.toAngles(i(t));\n  }\n  \n  static interpolateLinear([a1, b1, c1, d1], [a2, b2, c2, d2]) {\n    a2 -= a1, b2 -= b1, c2 -= c1, d2 -= d1;\n    const x = new Array(4);\n    return t => {\n      const l = Math.hypot(x[0] = a1 + a2 * t, x[1] = b1 + b2 * t, x[2] = c1 + c2 * t, x[3] = d1 + d2 * t);\n      x[0] /= l, x[1] /= l, x[2] /= l, x[3] /= l;\n      return x;\n    };\n  }\n  \n  static interpolate([a1, b1, c1, d1], [a2, b2, c2, d2]) {\n    let dot = a1 * a2 + b1 * b2 + c1 * c2 + d1 * d2;\n    if (dot < 0) a2 = -a2, b2 = -b2, c2 = -c2, d2 = -d2, dot = -dot;\n    if (dot > 0.9995) return Versor.interpolateLinear([a1, b1, c1, d1], [a2, b2, c2, d2]); \n    const theta0 = Math.acos(Math.max(-1, Math.min(1, dot)));\n    const x = new Array(4);\n    const l = Math.hypot(a2 -= a1 * dot, b2 -= b1 * dot, c2 -= c1 * dot, d2 -= d1 * dot);\n    a2 /= l, b2 /= l, c2 /= l, d2 /= l;\n    return t => {\n      const theta = theta0 * t;\n      const s = Math.sin(theta);\n      const c = Math.cos(theta);\n      x[0] = a1 * c + a2 * s;\n      x[1] = b1 * c + b2 * s;\n      x[2] = c1 * c + c2 * s;\n      x[3] = d1 * c + d2 * s;\n      return x;\n    };\n  }\n}\n\nexport default {\n  name: 'WorldTour',\n  props: {\n    width: {\n      type: Number,\n      default: 320\n    }\n  },\n  emits: ['error'],\n  setup(props, { emit }) {\n    const container = ref(null);\n    let animation = null;\n    let canvas = null;\n    const currentCountryName = ref('');\n    const loading = ref(true);\n    let world = null;\n    let land = null;\n    let countries = null;\n    let borders = null;\n    let projection = null;\n    let path = null;\n    let context = null;\n\n    const resizeVisualization = () => {\n      if (!canvas || !container.value || !world) {\n        console.error('Cannot resize visualization - missing canvas, container, or world data');\n        return;\n      }\n      \n      try {\n        const height = Math.min(props.width, 720);\n        const dpr = window.devicePixelRatio || 1;\n        \n        // Remove old canvas\n        if (container.value.firstChild) {\n          container.value.removeChild(container.value.firstChild);\n        }\n        \n        // Create new canvas\n        canvas = d3.create(\"canvas\")\n          .attr(\"width\", dpr * props.width)\n          .attr(\"height\", dpr * height)\n          .style(\"width\", `${props.width}px`)\n          .style(\"height\", `${height}px`);\n        \n        container.value.appendChild(canvas.node());\n        \n        context = canvas.node().getContext(\"2d\");\n        context.scale(dpr, dpr);\n        \n        // Update projection\n        projection = d3.geoOrthographic().fitExtent([[10, 10], [props.width - 10, height - 10]], {type: \"Sphere\"});\n        path = d3.geoPath(projection, context);\n        \n        // Initial render\n        render();\n        console.log('Canvas successfully resized and visualization rendered');\n      } catch (error) {\n        console.error('Error resizing visualization:', error);\n      }\n    };\n\n    function render(country, arc) {\n      if (!context || !path) return;\n      \n      const height = Math.min(props.width, 720);\n      \n      context.clearRect(0, 0, props.width, height);\n      \n      // Draw land\n      if (land) {\n        context.beginPath();\n        path(land);\n        context.fillStyle = \"#404040\"; // Darker gray for land\n        context.fill();\n      }\n      \n      // Draw selected country\n      if (country) {\n        context.beginPath();\n        path(country);\n        context.fillStyle = \"#60a5fa\"; // Blue-400 for highlighted country\n        context.fill();\n        \n        // Update current country name if available\n        if (country.properties && country.properties.name) {\n          currentCountryName.value = country.properties.name;\n        }\n      }\n      \n      // Draw borders\n      if (borders) {\n        context.beginPath();\n        path(borders);\n        context.strokeStyle = \"#525252\"; // Lighter gray for borders\n        context.lineWidth = 0.5;\n        context.stroke();\n      }\n      \n      // Draw sphere outline\n      context.beginPath();\n      path({type: \"Sphere\"});\n      context.strokeStyle = \"#737373\"; // Medium gray for sphere outline\n      context.lineWidth = 1.5;\n      context.stroke();\n      \n      // Draw arc if present\n      if (arc) {\n        context.beginPath();\n        path(arc);\n        context.strokeStyle = \"#93c5fd\"; // Blue-300 for arc\n        context.lineWidth = 1.5;\n        context.stroke();\n      }\n    }\n\n    watch(() => props.width, () => {\n      resizeVisualization();\n    });\n\n    onMounted(async () => {\n      console.log('WorldTour component mounted. Container ref:', container.value);\n      try {\n        // Fetch the TopoJSON data\n        console.log('Attempting to load world data from /data/countries-110m.json');\n        \n        // Try with a different loading approach\n        const response = await fetch('/data/countries-110m.json');\n        if (!response.ok) {\n          console.error(`Failed to fetch world data: ${response.status} ${response.statusText}`);\n          loading.value = false;\n          emit('error', 'Failed to fetch world data');\n          return;\n        }\n        \n        world = await response.json();\n        \n        if (!world) {\n          console.error('Failed to load world data - file was loaded but empty or invalid');\n          loading.value = false;\n          emit('error', 'Failed to process world data');\n          return;\n        }\n        \n        console.log('World data loaded successfully:', Object.keys(world));\n        \n        // Convert TopoJSON to GeoJSON\n        try {\n          land = feature(world, world.objects.land);\n          countries = feature(world, world.objects.countries).features;\n          borders = mesh(world, world.objects.countries, (a, b) => a !== b);\n          console.log(`Converted TopoJSON successfully - found ${countries.length} countries`);\n        } catch (error) {\n          console.error('Error converting TopoJSON to GeoJSON:', error);\n          console.log('World data structure:', JSON.stringify(world).substring(0, 500) + '...');\n          loading.value = false;\n          emit('error', 'Failed to convert world data');\n          return;\n        }\n\n        // Initial setup\n        resizeVisualization();\n        \n        // Implementing the Observable example's animation approach\n        let i = 0;\n        \n        async function animate() {\n          // Loop through countries\n          for (let i = 0; i < countries.length; i++) {\n            const country = countries[i];\n            \n            if (!container.value) break; // Check if component is still mounted\n            \n            // Get country centroid and setup rotation\n            const p1 = i > 0 ? d3.geoCentroid(countries[i-1]) : [0, 0];\n            const p2 = d3.geoCentroid(country);\n            const r1 = i > 0 ? [-p1[0], 20 - p1[1], 0] : [0, 0, 0];\n            const r2 = [-p2[0], 20 - p2[1], 0];\n            \n            const ip = d3.geoInterpolate(p1, p2);\n            const iv = Versor.interpolateAngles(r1, r2);\n            \n            // First transition: rotate to new position\n            const duration1 = 1250;\n            const start1 = Date.now();\n            \n            await new Promise(resolve => {\n              function frame1() {\n                const t = Math.min(1, (Date.now() - start1) / duration1);\n                if (projection) {\n                  projection.rotate(iv(t));\n                  render(country, {type: \"LineString\", coordinates: [p1, ip(t)]});\n                }\n                \n                if (t < 1 && container.value) {\n                  animation = requestAnimationFrame(frame1);\n                } else {\n                  resolve();\n                }\n              }\n              animation = requestAnimationFrame(frame1);\n            });\n            \n            if (!container.value) break; // Check if component is still mounted\n            \n            // Second transition: complete the arc\n            const duration2 = 750;\n            const start2 = Date.now();\n            \n            await new Promise(resolve => {\n              function frame2() {\n                const t = Math.min(1, (Date.now() - start2) / duration2);\n                render(country, {type: \"LineString\", coordinates: [ip(t), p2]});\n                \n                if (t < 1 && container.value) {\n                  animation = requestAnimationFrame(frame2);\n                } else {\n                  resolve();\n                }\n              }\n              animation = requestAnimationFrame(frame2);\n            });\n            \n            // Pause on each country briefly\n            await new Promise(resolve => setTimeout(resolve, 500));\n          }\n          \n          // When finished with all countries, start over\n          if (container.value) {\n            animate();\n          }\n        }\n\n        // Start the animation\n        animate();\n        loading.value = false;\n        \n      } catch (error) {\n        console.error('Error in WorldTour component:', error);\n        loading.value = false;\n        emit('error', 'An error occurred');\n      }\n    });\n\n    onBeforeUnmount(() => {\n      if (animation) {\n        cancelAnimationFrame(animation);\n      }\n    });\n\n    return { \n      container,\n      currentCountryName,\n      loading\n    };\n  }\n}\n</script>\n\n<style scoped>\n.world-tour-container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  position: relative;\n  min-height: 320px;\n  border: 2px solid #3b82f6; /* Add a visible border */\n  border-radius: 8px;\n  background-color: #1e293b; /* slate-800 */\n  margin: 1rem 0;\n}\n\ncanvas {\n  display: block;\n  margin: 0 auto;\n  border-radius: 8px;\n  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.5), 0 4px 8px rgba(59, 130, 246, 0.2);\n  background-color: #1e293b; /* slate-800 */\n}\n\n.loading-indicator {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 16px;\n}\n\n.spinner {\n  width: 40px;\n  height: 40px;\n  border: 4px solid rgba(255, 255, 255, 0.1);\n  border-radius: 50%;\n  border-top-color: #60a5fa;\n  animation: spin 1s ease-in-out infinite;\n}\n\n.loading-text {\n  color: #94a3b8;\n  font-size: 0.875rem;\n}\n\n@keyframes spin {\n  to { transform: rotate(360deg); }\n}\n</style> ","<template>\n  <div class=\"py-8\">\n    <div class=\"mb-8 text-center\">\n      <h1 class=\"text-3xl font-bold text-slate-800 mb-4\">Welcome to EnergyOne</h1>\n      <p class=\"text-lg text-slate-600 max-w-xl mx-auto\">Discover global renewable energy opportunities at your fingertips</p>\n            </div>\n\n    <div class=\"max-w-3xl mx-auto px-4\">\n      <div class=\"bg-white rounded-lg shadow-sm p-6 mb-8\">\n        <div class=\"mb-6\">\n          <h2 class=\"text-xl font-semibold text-slate-800 mb-2\">Global Energy Impact</h2>\n          <p class=\"text-slate-600 mb-4\">Explore renewable energy projects around the world and see how your investments can make a difference.</p>\n          \n          <!-- World Tour Component -->\n          <div class=\"mb-6\">\n            <WorldTour :width=\"responsive.width\" />\n          </div>\n        </div>\n\n        <div class=\"flex justify-between mt-8\">\n          <button @click=\"handleBack\" class=\"btn-sm bg-white border-slate-200 hover:border-slate-300 text-slate-600\">Back</button>\n          <button @click=\"handleNext\" class=\"btn-sm bg-blue-500 hover:bg-blue-600 text-white\">Continue</button>\n      </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, onMounted, onUnmounted } from 'vue';\nimport { useRouter } from 'vue-router';\nimport WorldTour from '@/components/visualizations/WorldTour.vue';\n\nexport default {\n  name: 'Onboarding01',\n  components: {\n    WorldTour\n  },\n  setup() {\n    const router = useRouter();\n    const responsive = ref({\n      width: 800\n    });\n    \n    // For responsive sizing of the visualization\n    const updateSize = () => {\n      const containerWidth = Math.min(window.innerWidth - 80, 800);\n      responsive.width = containerWidth;\n    };\n    \n    onMounted(() => {\n      updateSize();\n      window.addEventListener('resize', updateSize);\n    });\n    \n    onUnmounted(() => {\n      window.removeEventListener('resize', updateSize);\n    });\n    \n    const handleNext = () => {\n      router.push('/dashboard/onboarding/step-2');\n    };\n    \n    const handleBack = () => {\n      router.push('/');\n    };\n    \n    return {\n      handleNext,\n      handleBack,\n      responsive\n    };\n  }\n};\n</script>\n\n<style scoped>\n.btn-sm {\n  @apply inline-flex items-center justify-center rounded px-3 py-2 text-sm font-medium transition duration-150 ease-in-out;\n}\n</style>"],"names":["Versor","l","p","g","sl","cl","sp","cp","sg","cg","a","b","c","d","i","t","a1","b1","c1","d1","a2","b2","c2","d2","x","dot","theta0","theta","s","_sfc_main","props","emit","container","ref","animation","currentCountryName","loading","world","land","countries","borders","projection","resizeVisualization","render","country","arc","watch","onMounted","response","feature","mesh","error","animate","p1","d3.geoCentroid","p2","r1","r2","ip","d3.geoInterpolate","iv","duration1","start1","resolve","frame1","duration2","start2","frame2","onBeforeUnmount","_openBlock","_createElementBlock","_hoisted_1","$setup","_hoisted_2","_cache","_createElementVNode","_createCommentVNode","WorldTour","router","useRouter","responsive","updateSize","containerWidth","onUnmounted","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_createVNode","_component_WorldTour","args"],"mappings":"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"}